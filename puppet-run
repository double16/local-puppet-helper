#!/usr/bin/env bash

set -euo pipefail

SCRIPT_DIR="$(dirname "$(readlink -f "${BASH_SOURCE}")")"

. ${SCRIPT_DIR}/environment

FLAGS=''
if [ -n "$DEBUG" ] ; then
    FLAGS="$FLAGS --debug"
    if [ -n "$PROFILE" ]; then
        FLAGS="$FLAGS --profile"
    fi
fi

[[ -e $ROOT_PATH/environments ]] || mkdir -p $ROOT_PATH/environments
[[ -e $ROOT_PATH/environments/production ]] || ln -s $ROOT_PATH/repo $ROOT_PATH/environments/production

(
    cd $REPO_PATH

    if [ -n "$(git status -s)" ] ; then
        echo "Repo is unclean: $REPO_PATH"
    else
        git pull &>/dev/null || echo "Failed to update repo: $REPO_PATH"
        git submodule update --init &> /dev/null || echo "Failed to update submodules: $REPO_PATH"
    fi

    which bundle &>/dev/null || gem install --no-user-install bundler
    bundle check &>/dev/null || bundle install &>/dev/null || echo "Failed to update bundle"

    [[ -e $REPO_PATH/preflight/main.sh ]] && $REPO_PATH/preflight/main.sh

    librarian-puppet install --clean

    mkdir -p "$LOG_PATH"
    LOG_FILE="${LOG_PATH}/puppet-run.log"
    (
        host="$(hostname -f)"
        strftime="%Y-%m-%d %H:%M:%S"
        echo "${host} $(date "+$strftime") STARTING RUN"
        puppet apply \
            "--confdir=$REPO_PATH" \
            "--environment=$PUPPET_ENV" \
            "$ENV_PATH/$PUPPET_ENV/manifests" \
            $FLAGS \
            2>&1 \
            | awk "{print strftime(\"$strftime\") \" $host \" \$0}"
        echo "${host} $(date "+$strftime") ENDING RUN"
    ) | tee -a $LOG_FILE
)
